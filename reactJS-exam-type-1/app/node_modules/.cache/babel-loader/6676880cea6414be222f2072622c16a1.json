{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Bekomentaru\\\\Desktop\\\\reactJS-exam-type-1\\\\reactJS-exam-type-1\\\\app\\\\src\\\\exam-tasks\\\\task-9\\\\Task9.js\";\nimport React, { useEffect, Component } from \"react\";\nimport axios from \"axios\";\nimport Card from \"./Card\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Task9 extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      items: null\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"https://jsonplaceholder.typicode.com/todos\").then(response => response.json()).then(data => {\n      this.setState({\n        items: data\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Task 9\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this);\n  }\n\n} // <div className={css6.container}>\n//   {items.map((item) => (\n//     <ul className={css6.card} key={item.id}>\n//       <li>Name: {item.name}</li>\n//       <li>Email: {item.email}</li>\n//       <li>\n//         Address street: {item.address.street},city:\n//         {item.address.street.city}\n//       </li>\n//       <li>Phone: {item.phone}</li>\n//       <li>Company name: {item.company.name}</li>\n//     </ul>\n//   ))}\n// </div>\n\n/* Task 9\nTask 9 viduje atvaizduokite 5 būtinus atlikti darbų iš čia: https://jsonplaceholder.typicode.com/todos\n\nPastaba: \n- atkreipkite dėmesį, kad abu komponetai yra class tipo, \ntodėl būtina naudoti \"Class components State and Lifecycle\";\n- būtini atlikti darbai turi būti atvaizuojami vienoje eilutėje \nir turėti šia informacija: pavadinimas, atlikta/neatlika (yes/no)\n*/","map":{"version":3,"sources":["C:/Users/Bekomentaru/Desktop/reactJS-exam-type-1/reactJS-exam-type-1/app/src/exam-tasks/task-9/Task9.js"],"names":["React","useEffect","Component","axios","Card","Task9","constructor","props","state","items","componentDidMount","fetch","then","response","json","data","setState","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,SAA3B,QAA4C,OAA5C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,QAAjB;;AAEA,eAAe,MAAMC,KAAN,SAAoBH,SAApB,CAA8B;AAC3CI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE;AADI,KAAb;AAGD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClBC,IAAAA,KAAK,CAAC,4CAAD,CAAL,CACGC,IADH,CACSC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADtB,EAEGF,IAFH,CAESG,IAAD,IAAU;AACd,WAAKC,QAAL,CAAc;AAAEP,QAAAA,KAAK,EAAEM;AAAT,OAAd;AACD,KAJH;AAKD;;AAEDE,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA,6BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAMD;;AAvB0C,C,CA0B7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React, { useEffect, Component } from \"react\";\nimport axios from \"axios\";\nimport Card from \"./Card\";\n\nexport default class Task9 extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      items: null,\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"https://jsonplaceholder.typicode.com/todos\")\n      .then((response) => response.json())\n      .then((data) => {\n        this.setState({ items: data });\n      });\n  }\n\n  render() {\n    return (\n      <div>\n        <h3>Task 9</h3>\n        {/*<Card />*/}\n      </div>\n    );\n  }\n}\n\n// <div className={css6.container}>\n//   {items.map((item) => (\n//     <ul className={css6.card} key={item.id}>\n//       <li>Name: {item.name}</li>\n//       <li>Email: {item.email}</li>\n//       <li>\n//         Address street: {item.address.street},city:\n//         {item.address.street.city}\n//       </li>\n//       <li>Phone: {item.phone}</li>\n//       <li>Company name: {item.company.name}</li>\n//     </ul>\n//   ))}\n// </div>\n\n/* Task 9\nTask 9 viduje atvaizduokite 5 būtinus atlikti darbų iš čia: https://jsonplaceholder.typicode.com/todos\n\nPastaba: \n- atkreipkite dėmesį, kad abu komponetai yra class tipo, \ntodėl būtina naudoti \"Class components State and Lifecycle\";\n- būtini atlikti darbai turi būti atvaizuojami vienoje eilutėje \nir turėti šia informacija: pavadinimas, atlikta/neatlika (yes/no)\n*/\n"]},"metadata":{},"sourceType":"module"}